//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a RdGen v1.12.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
using System;
using System.Linq;
using System.Collections.Generic;
using System.Runtime.InteropServices;
using JetBrains.Annotations;

using JetBrains.Core;
using JetBrains.Diagnostics;
using JetBrains.Collections;
using JetBrains.Collections.Viewable;
using JetBrains.Lifetimes;
using JetBrains.Serialization;
using JetBrains.Rd;
using JetBrains.Rd.Base;
using JetBrains.Rd.Impl;
using JetBrains.Rd.Tasks;
using JetBrains.Rd.Util;
using JetBrains.Rd.Text;


// ReSharper disable RedundantEmptyObjectCreationArgumentList
// ReSharper disable InconsistentNaming
// ReSharper disable RedundantOverflowCheckingContext


namespace JetBrains.Rider.Model
{
  
  
  /// <summary>
  /// <p>Generated from: Model.kt:92</p>
  /// </summary>
  public class PrimitiveModel : RdExtBase
  {
    //fields
    //public fields
    [NotNull] public IViewableProperty<string> StrValue => _StrValue;
    [NotNull] public IViewableProperty<int> IntValue => _IntValue;
    [NotNull] public ISignal<int> SetIntValue => _SetIntValue;
    [NotNull] public ISignal<string> SetStrValue => _SetStrValue;
    
    //private fields
    [NotNull] private readonly RdProperty<string> _StrValue;
    [NotNull] private readonly RdProperty<int> _IntValue;
    [NotNull] private readonly RdSignal<int> _SetIntValue;
    [NotNull] private readonly RdSignal<string> _SetStrValue;
    
    //primary constructor
    private PrimitiveModel(
      [NotNull] RdProperty<string> strValue,
      [NotNull] RdProperty<int> intValue,
      [NotNull] RdSignal<int> setIntValue,
      [NotNull] RdSignal<string> setStrValue
    )
    {
      if (strValue == null) throw new ArgumentNullException("strValue");
      if (intValue == null) throw new ArgumentNullException("intValue");
      if (setIntValue == null) throw new ArgumentNullException("setIntValue");
      if (setStrValue == null) throw new ArgumentNullException("setStrValue");
      
      _StrValue = strValue;
      _IntValue = intValue;
      _SetIntValue = setIntValue;
      _SetStrValue = setStrValue;
      _StrValue.OptimizeNested = true;
      _IntValue.OptimizeNested = true;
      BindableChildren.Add(new KeyValuePair<string, object>("strValue", _StrValue));
      BindableChildren.Add(new KeyValuePair<string, object>("intValue", _IntValue));
      BindableChildren.Add(new KeyValuePair<string, object>("setIntValue", _SetIntValue));
      BindableChildren.Add(new KeyValuePair<string, object>("setStrValue", _SetStrValue));
    }
    //secondary constructor
    private PrimitiveModel (
    ) : this (
      new RdProperty<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString),
      new RdProperty<int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt),
      new RdSignal<int>(JetBrains.Rd.Impl.Serializers.ReadInt, JetBrains.Rd.Impl.Serializers.WriteInt),
      new RdSignal<string>(JetBrains.Rd.Impl.Serializers.ReadString, JetBrains.Rd.Impl.Serializers.WriteString)
    ) {}
    //deconstruct trait
    //statics
    
    
    
    protected override long SerializationHash => -1621346098143554055L;
    
    protected override Action<ISerializers> Register => RegisterDeclaredTypesSerializers;
    public static void RegisterDeclaredTypesSerializers(ISerializers serializers)
    {
      
      serializers.RegisterToplevelOnce(typeof(DemoRoot), DemoRoot.RegisterDeclaredTypesSerializers);
    }
    
    public PrimitiveModel(Lifetime lifetime, IProtocol protocol) : this()
    {
      Identify(protocol.Identities, RdId.Root.Mix("PrimitiveModel"));
      this.BindTopLevel(lifetime, protocol, "PrimitiveModel");
    }
    
    //constants
    
    //custom body
    //methods
    //equals trait
    //hash code trait
    //pretty print
    public override void Print(PrettyPrinter printer)
    {
      printer.Println("PrimitiveModel (");
      using (printer.IndentCookie()) {
        printer.Print("strValue = "); _StrValue.PrintEx(printer); printer.Println();
        printer.Print("intValue = "); _IntValue.PrintEx(printer); printer.Println();
        printer.Print("setIntValue = "); _SetIntValue.PrintEx(printer); printer.Println();
        printer.Print("setStrValue = "); _SetStrValue.PrintEx(printer); printer.Println();
      }
      printer.Print(")");
    }
    //toString
    public override string ToString()
    {
      var printer = new SingleLinePrettyPrinter();
      Print(printer);
      return printer.ToString();
    }
  }
}
